~extensions start~
~extensions import *~
~extensions end~

~main body start~
~helper import sensitivity/exceptions/helpers/Exceptions~

~template arithmetic_exception_positive start~
string tmpUnique42 = ~[VAR_string@1]~;
try {
~[BODY]~
    int a = 1 / 0;
} catch (DivideByZeroException e) {
    ~[VAR_string@1]~ = tmpUnique42;
}
~template end~

~template arithmetic_exception_negative start~
try {
~[BODY]~
    int a = 1 / 0;
} catch (DivideByZeroException e) {
    ~[VAR_string]~ = "";
}
~template end~

~template array_store_exception_positive start~
string tmpUnique42 = ~[VAR_string@1]~;
try {
~[BODY]~
    object[] x = new string[3];
    x[0] = 0;
} catch (ArrayTypeMismatchException e) {
    ~[VAR_string@1]~ = tmpUnique42;
}
~template end~

~template array_store_exception_negative start~
try {
~[BODY]~
    object[] x = new string[3];
    x[0] = 0;
} catch (ArrayTypeMismatchException e) {
    ~[VAR_string]~ = "";
}
~template end~

~template null_pointer_exception_positive start~
string tmpUnique42 = ~[VAR_string@1]~;
try {
~[BODY]~
    int? a = null;
    a = a + a;
} catch (NullReferenceException e) {
    ~[VAR_string@1]~ = tmpUnique42;
}
~template end~

~template null_pointer_exception_negative start~
try {
~[BODY]~
    int? a = null;
    a = a + a;
} catch (NullReferenceException e) {
    ~[VAR_string]~ = "";
}
~template end~

~main body end~
